<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionRequiresAdditionalRights" xml:space="preserve">
    <value>Action requires additional rights.</value>
  </data>
  <data name="AlreadyRegistredSubscriber" xml:space="preserve">
    <value>This email is already in our subscribers list.</value>
  </data>
  <data name="AppointmentCannotBeInPast" xml:space="preserve">
    <value>Appointment date cannot be in the past.</value>
  </data>
  <data name="CannotHaveMoreThan5PerAd" xml:space="preserve">
    <value>You cannot have more than five pictures per advertisment.</value>
  </data>
  <data name="CannotSaveExternalLogin" xml:space="preserve">
    <value>Cannot save external login.</value>
  </data>
  <data name="CannotUploadMoreThan5" xml:space="preserve">
    <value>You cannot upload more than five pictures.</value>
  </data>
  <data name="ClientIdDoesNotHaveEnoughRight" xml:space="preserve">
    <value>The given URL is not allowed by Client_id '{0}' configuration.</value>
  </data>
  <data name="ClientIdIsRequired" xml:space="preserve">
    <value>client_Id is required.</value>
  </data>
  <data name="ClientIdNotRegistred" xml:space="preserve">
    <value>Client_id '{0}' is not registered in the system.</value>
  </data>
  <data name="ClientInactive" xml:space="preserve">
    <value>Client is inactive.</value>
  </data>
  <data name="ClientSecretShouldBeSent" xml:space="preserve">
    <value>Client secret should be sent.</value>
  </data>
  <data name="ConfirmPasswordNotMatch" xml:space="preserve">
    <value>Confirm Password field didn't match Password field.</value>
  </data>
  <data name="EmailDoesNotExist" xml:space="preserve">
    <value>The email is not registred.</value>
  </data>
  <data name="ExistUserEmail" xml:space="preserve">
    <value>A user with this email is already registered.</value>
  </data>
  <data name="ExistUserUsername" xml:space="preserve">
    <value>A user with this username is already registered.</value>
  </data>
  <data name="ExternalUserIsNotRegistred" xml:space="preserve">
    <value>Exteranl user is not registred.</value>
  </data>
  <data name="ImageNotFoundInAdImagesList" xml:space="preserve">
    <value>The image was not found in the advertisment images list.</value>
  </data>
  <data name="InccorectCurrentPassword" xml:space="preserve">
    <value>Inccorect current password.</value>
  </data>
  <data name="InvalidAbilityIdentifier" xml:space="preserve">
    <value>Invalid horse ability identifier.</value>
  </data>
  <data name="InvalidAdIdentifier" xml:space="preserve">
    <value>Invalid advertisment identifier.</value>
  </data>
  <data name="InvalidChangePasswordRequest" xml:space="preserve">
    <value>Invalid change password request.</value>
  </data>
  <data name="InvalidClientSecret" xml:space="preserve">
    <value>Client secret is invalid.</value>
  </data>
  <data name="InvalidConfirmPasswordFormat" xml:space="preserve">
    <value>Confirm Password field didn't match Password field</value>
  </data>
  <data name="InvalidEditProfileRequest" xml:space="preserve">
    <value>Invalid edit profile request.</value>
  </data>
  <data name="InvalidEmailFormat" xml:space="preserve">
    <value>Invalid email format.</value>
  </data>
  <data name="InvalidEmailOrPassword" xml:space="preserve">
    <value>Invalid email or password.</value>
  </data>
  <data name="InvalidExternalLoginRequest" xml:space="preserve">
    <value>Invalid external login request.</value>
  </data>
  <data name="InvalidHorseAdRequest" xml:space="preserve">
    <value>Invalid horse advertisment request.</value>
  </data>
  <data name="InvalidHorseGenderIdentifier" xml:space="preserve">
    <value>Invalid horse gender identifier.</value>
  </data>
  <data name="InvalidLoginRequest" xml:space="preserve">
    <value>Invalid login request.</value>
  </data>
  <data name="InvalidMakeAppRequest" xml:space="preserve">
    <value>Invalid make appointment request.</value>
  </data>
  <data name="InvalidMessageFormat" xml:space="preserve">
    <value>Message field cannot be empty.</value>
  </data>
  <data name="InvalidPasswordFormat" xml:space="preserve">
    <value>Password should have at least six characters.</value>
  </data>
  <data name="InvalidPhoneNumberFormat" xml:space="preserve">
    <value>Phone Number should be like 0123456789 or +40757520997</value>
  </data>
  <data name="InvalidPictureFormat" xml:space="preserve">
    <value>Invalid picture format.</value>
  </data>
  <data name="InvalidPictureIdentifier" xml:space="preserve">
    <value>Invalid picture identifier.</value>
  </data>
  <data name="InvalidPriceRangeIdentifier" xml:space="preserve">
    <value>Invalid price range identifier.</value>
  </data>
  <data name="InvalidProviderOrExternalToken" xml:space="preserve">
    <value>Invalid Provider or External Token.</value>
  </data>
  <data name="InvalidRecommendedRiderIdentifier" xml:space="preserve">
    <value>Invalid recommended rider identifier.</value>
  </data>
  <data name="InvalidRedirectUri" xml:space="preserve">
    <value>redirect_uri is invalid.</value>
  </data>
  <data name="InvalidRegistrationRequest" xml:space="preserve">
    <value>Invalid registration request.</value>
  </data>
  <data name="InvalidSendEmailRequest" xml:space="preserve">
    <value>Invalid send email request.</value>
  </data>
  <data name="InvalidUserIdentifier" xml:space="preserve">
    <value>Invalid user identifier.</value>
  </data>
  <data name="MustSelectAtLeastOneAbility" xml:space="preserve">
    <value>You must select at least one ability.</value>
  </data>
  <data name="MustSelectAtLeastOneRecommendedRider" xml:space="preserve">
    <value>You must select at least one recommended rider.</value>
  </data>
  <data name="PleaseUpdateAtLeastOneImage" xml:space="preserve">
    <value>Please update at least one image.</value>
  </data>
  <data name="RefreshTokenIssuedToDifferentClient" xml:space="preserve">
    <value>Refresh token is issued to a different clientId.</value>
  </data>
  <data name="WebSocketConnectionForbidden" xml:space="preserve">
    <value>Connection forbidden.</value>
  </data>
</root>